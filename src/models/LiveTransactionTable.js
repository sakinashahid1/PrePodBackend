const mongoose = require("mongoose");

const LiveTransactionTableSchema = new mongoose.Schema({
  livedata_id: { type: Number, unique: true },
  txnid: { type: String },
  merchantTxnId: { type: String },
  merchant: { type: String },
  amount: { type: Number },
  fee: { type: Number },
  merchant_fee: { type: Number },
  backUrl: { type: String },
  merchant_id: { type: String },
  transactiondate: { type: String },
  statusBKP: { type: String },
  Status: { type: String },
  isSettled: { type: Number },
  settledDate: { type: String },
  settledTxnId: { type: String },
  settledAmount: { type: Number },
  router: { type: Number },
  description: { type: String },
  email: { type: String },
  currency: { type: String },
  env: { type: String },
  mode: { type: String },
  paymentgateway: { type: String },
  payment_id: { type: String },
  pg_order_key: { type: String },
  message: { type: String },
  webhook_id: { type: String },
  requested_phone: { type: String },
  orderNo: { type: String },
  cname: { type: String },
  tempUpdated: { type: String },
  is_admin_settled: { type: String },
  admin_settled_date: { type: String },
  admin_settled_amount: { type: Number },
  cardtype: { type: String },
  requestMode: { type: String },
  cardnumber: { type: String },
  cardExpire: { type: String },
  cardCVC: { type: String },
  pdate: { type: String },
  country: { type: String },
  dels: { type: String },
  web_url: { type: String },
  mid: { type: String },
  from_temp: { type: Number },
  accountHolder: { type: String },
  accountBankCode: { type: String },
  accountNumber: { type: String },
  birthDate: { type: String },
  internal_callback: { type: String },
  internal_callback_time: { type: String },
});

const LiveTransactionTable = mongoose.model(
  "LiveTransactionTable",
  LiveTransactionTableSchema
);

module.exports = LiveTransactionTable;
